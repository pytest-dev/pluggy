name: test

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        name: [
          "windows-py37",
          "windows-py311",
          "windows-pypy3",

          "ubuntu-py37-pytestmain",
          "ubuntu-py37",
          "ubuntu-py38",
          "ubuntu-py39",
          "ubuntu-py310",
          "ubuntu-py311",
          "ubuntu-pypy3",
          "ubuntu-benchmark",
        ]

        include:
          - name: "windows-py37"
            python: "3.7"
            os: windows-latest
            tox_env: "py37"
          - name: "windows-py311"
            python: "3.10"
            os: windows-latest
            tox_env: "py311"
          - name: "windows-pypy3"
            python: "pypy3.9"
            os: windows-latest
            tox_env: "pypy3"
          - name: "ubuntu-py37-pytestmain"
            python: "3.7"
            os: ubuntu-latest
            tox_env: "py37-pytestmain"
            use_coverage: true
          - name: "ubuntu-py37"
            python: "3.7"
            os: ubuntu-latest
            tox_env: "py37"
            use_coverage: true
          - name: "ubuntu-py38"
            python: "3.8"
            os: ubuntu-latest
            tox_env: "py38"
            use_coverage: true
          - name: "ubuntu-py39"
            python: "3.9"
            os: ubuntu-latest
            tox_env: "py39"
            use_coverage: true
          - name: "ubuntu-py310"
            python: "3.10"
            os: ubuntu-latest
            tox_env: "py310"
          - name: "ubuntu-py311"
            python: "3.11"
            os: ubuntu-latest
            tox_env: "py311"
            use_coverage: true
          - name: "ubuntu-pypy3"
            python: "pypy3.9"
            os: ubuntu-latest
            tox_env: "pypy3"
            use_coverage: true
          - name: "ubuntu-benchmark"
            python: "3.8"
            os: ubuntu-latest
            tox_env: "benchmark"

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install tox coverage

    - name: Test without coverage
      if: "! matrix.use_coverage"
      run: "tox -e ${{ matrix.tox_env }}"

    - name: Test with coverage
      if: "matrix.use_coverage"
      run: "tox -e ${{ matrix.tox_env }}-coverage"

    - name: Upload coverage
      if: matrix.use_coverage && github.repository == 'pytest-dev/pluggy'
      env:
        CODECOV_NAME: ${{ matrix.name }}
      run: bash scripts/upload-coverage.sh -F GHA,${{ runner.os }}
